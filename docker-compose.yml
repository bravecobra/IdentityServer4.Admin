version: '3.4'
services:
  sampleapi:
    image: '${DOCKER_REGISTRY-}api'
    ports:
      - '5002:80'
    build:
      context: .
      dockerfile: samples/Quickstarts/src/Api/Dockerfile
    container_name: skoruba-sampleapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - './compose/sampleapi/appsettings.json:/app/appsettings.json'
    networks:
      identityadmin: null

  skoruba.identityserver4.admin:
    image: '${DOCKER_REGISTRY-}skorubaidentityserver4admin'
    ports:
      - '9000:80'
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.Admin/Dockerfile
    container_name: skoruba-identityserver4-admin
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    command: dotnet Skoruba.IdentityServer4.Admin.dll /seed
    depends_on:
      - db
      - skoruba.identityserver4.sts.identity
    networks:
      identityadmin: null
    volumes:
      - './compose/admin/appsettings.json:/app/appsettings.json'
      - './compose/shared/serilog.json:/app/serilog.json'
      - './compose/shared/identitydata.json:/app/identitydata.json'
      - './compose/shared/identityserverdata.json:/app/identityserverdata.json'

  skoruba.identityserver4.admin.api:
    image: '${DOCKER_REGISTRY-}skorubaidentityserver4adminapi'
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.Admin.Api/Dockerfile
    ports:
      - '5000:80'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    container_name: skoruba-identityserver4-admin-api
    networks:
      identityadmin: null
    volumes:
      - './compose/api/appsettings.json:/app/appsettings.json'
      - './compose/shared/serilog.json:/app/serilog.json'

  skoruba.identityserver4.sts.identity:
    image: '${DOCKER_REGISTRY-}skorubaidentityserver4stsidentity'
    ports:
      - '80:80'
    build:
      context: .
      dockerfile: src/Skoruba.IdentityServer4.STS.Identity/Dockerfile
    container_name: skoruba-identityserver4-sts-identity
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db
    volumes:
      - './compose/sts/appsettings.json:/app/appsettings.json'
      - './compose/shared/serilog.json:/app/serilog.json'
    networks:
      identityadmin:
        aliases:
          - 127.0.0.1.xip.io

  db:
    image: mcr.microsoft.com/mssql/server
    ports:
      - '1433:1433'
    container_name: skoruba-identityserver4-db
    environment:
      SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
      ACCEPT_EULA: 'Y'
    networks:
      identityadmin: null
    volumes:
      - 'dbdata:/var/opt/mssql'
volumes:
  dbdata:
    driver: local
networks:
  identityadmin:
    driver: bridge
