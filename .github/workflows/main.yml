name: CI

on: [push]

jobs:

  build:
    name: Run Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.100
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    - name: Build .NET solution
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      run: |
        dotnet --version
        dotnet build ./Skoruba.IdentityServer4.Admin.sln --configuration Release

    - name: Build the Skoruba.IdentityServer4.Admin Docker image
      run: docker build . --file src/services/deliveries/Dockerfile --tag Skoruba.IdentityServer4.Admin:${{ matrix.os }}-${{ github.sha }}

    - name: Build the Skoruba.IdentityServer4.Admin.Api Docker image
      run: docker build . --file src/services/ordering/Dockerfile --tag Skoruba.IdentityServer4.Admin.Api:${{ matrix.os }}-${{ github.sha }}

    - name: Build the Skoruba.IdentityServer4.STS.Identity Docker image
      run: docker build . --file src/services/ordering/Dockerfile --tag Skoruba.IdentityServer4.STS.Identity:${{ matrix.os }}-${{ github.sha }}

    - name: Validate docker-compose-ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        docker --version
        docker-compose --version
        docker-compose config

    - name: Validate docker-compose-windows
      if: matrix.os == 'windows-latest'
      run: |
        docker --version
        docker-compose --version
        docker-compose config
